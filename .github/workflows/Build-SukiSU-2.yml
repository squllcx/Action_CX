name: Build OnePlus Ace3 Auto

on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'

env:
  RETENTION_COUNT: 5
  CPU: 'sm8550'
  FEIL: 'oneplus_ace3_v'
  CPUD: 'kalama'
  ANDROID_VERSION: 'android13'
  KERNEL_VERSION: '5.15'
  KERNEL_NAME: '-ace3-c15.851-cx'
  KERNELSU_VARIANT: SukiSU-Ultra
  KERNELSU_VERSION: main
  SUSFS_ENABLED: true
  VFS_patch_ENABLED: enable

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      ksuuver: ${{ steps.ksu_version_suu.outputs.ksuuver }}
      ksuver: ${{ steps.ksu_version_su.outputs.ksuver }}

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "cx"
         git config --global user.email "squllcx@gmail.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ env.CPU }} -m ${{ env.FEIL }}.xml --depth=1
         repo sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/external/dtc/scripts/setlocalversion
      
      - name: SukiSU-Ultra & SukiSU version
        if: ${{ env.KERNELSU_VARIANT == 'SukiSU-Ultra' || env.KERNELSU_VARIANT == 'SukiSU' }}
        run: |
          if [[ "${{ env.KERNELSU_VERSION }}" == "tag" ]]; then
            echo "BRANCH=-" >> $GITHUB_ENV
          elif [[ "${{ env.KERNELSU_VERSION }}" == "main" ]]; then
            echo "BRANCH=-s susfs-dev" >> $GITHUB_ENV
          fi
          
      - name: Add SukiSU-Ultra
        if: ${{ env.KERNELSU_VARIANT == 'SukiSU-Ultra' }}
        id: ksu_version_suu
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10700)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          echo "ksuuver=$KSU_VERSION" >> $GITHUB_OUTPUT
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Add SukiSU
        if: ${{ env.KERNELSU_VARIANT == 'SukiSU' }}
        id: ksu_version_su
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10700)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          echo "ksuver=$KSU_VERSION" >> $GITHUB_OUTPUT
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          
      - name: Apply SUSFS Patches SukiSU
        if: ${{ env.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://github.com/ShirkNeko/susfs4ksu.git -b gki-${{ env.ANDROID_VERSION }}-${{ env.KERNEL_VERSION }}
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cd kernel_platform

          # Copy SUSFS patches
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ env.ANDROID_VERSION }}-${{ env.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          #lz4k
          #cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux
          #cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib
          #cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto
          
          echo "正在给内核打susfs补丁"
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-${{ env.ANDROID_VERSION }}-${{ env.KERNEL_VERSION }}.patch || true
          echo "完成"
          
      - name: Apply Hide Stuff Patches
        if: ${{ env.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          #cp ../../SukiSU_patch/69_hide_stuff.patch ./
          #echo "正在打隐藏应用补丁"
          #patch -p1 -F 3 < 69_hide_stuff.patch
         
      - name: Apply New Hooks Patches
        if: ${{ env.VFS_patch_ENABLED == 'enable' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          echo "正在打vfs补丁"
          patch -p1 -F 3 < syscall_hooks.patch
          echo "完成"

          #  cp ../../SukiSU_patch/other/lz4k_patch/${{ env.KERNEL_VERSION }}/lz4kd.patch ./
          #  patch -p1 -F 3 < lz4kd.patch || true

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          if [[ "${{ env.KERNELSU_VARIANT }}" == "SukiSU-Ultra" ]]; then
            echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi

          # Add VFS configuration settings
          if [[ "${{ env.VFS_patch_ENABLED }}" == 'enable' ]]; then
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          else
            echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

          #if [ "${{ env.KERNEL_VERSION }}" = "5.10" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_MODULE_SIG=n" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZO=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM_DEF_COMP_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if [ "${{ env.KERNEL_VERSION }}" != "6.6" ] && [ "${{ env.KERNEL_VERSION }}" != "5.10" ]; then
          #  sed -i 's/CONFIG_MODULE_SIG=y/CONFIG_MODULE_SIG=n/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if [ "${{ env.KERNEL_VERSION }}" = "6.6" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if grep -q "CONFIG_ZSMALLOC=y" ./common/arch/arm64/configs/gki_defconfig && grep -q "CONFIG_ZRAM=y" ./common/arch/arm64/configs/gki_defconfig; then
          #  echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi
          
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
           if [[ "${{ env.KERNEL_VERSION }}" == "6.1" || "${{ env.KERNEL_VERSION }}" == "6.6" ]]; then
             sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
           fi
           sed -i '$s|echo "\$res"|echo "\${{ env.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
  
      - name: Build kernel
        run: |
          cd kernel_workspace
          if [[ "${{ env.KERNEL_VERSION }}" == "6.1" || "${{ env.KERNEL_VERSION }}" == "6.6" ]]; then
            ./kernel_platform/build_with_bazel.py -t ${{ env.CPUD }} gki --action_env=KSU_VERSION
          else
            LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ env.CPUD }} gki
          fi
         
      - name: Make AnyKernel3
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          dir1="./kernel_workspace/kernel_platform/out/msm-kernel-${{ env.CPUD }}-gki/dist/"
          dir2="./kernel_workspace/kernel_platform/common/out/arch/arm64/boot/"
          dir3="./kernel_workspace/kernel_platform/out/msm-${{ env.CPUD }}-${{ env.CPUD }}-gki/dist/"
          target1="./AnyKernel3/"
          target2="./kernel_workspace/kernel"

          if find "$dir1" -name "Image" | grep -q "Image"; then
            image_path="$dir1"Image
          elif find "$dir2" -name "Image" | grep -q "Image"; then
            image_path="$dir2"Image
          elif find "$dir3" -name "Image" | grep -q "Image"; then
            image_path="$dir3"Image
          else
            image_path=$(find "./kernel_workspace/kernel_platform/common/out/" -name "Image" | head -n 1)
          fi

          if [ -n "$image_path" ] && [ -f "$image_path" ]; then
            mkdir -p "$dir1"
            if [ "$(realpath "$image_path")" != "$(realpath "$dir1"Image)" ]; then
              cp "$image_path" "$dir1"
            else
              echo "源文件与目标相同，跳过复制"
            fi
          else
            echo "未找到 Image 文件，构建可能失败"
            exit 1
          fi

      - name: Apply patch_linux and replace Image
        if: ${{ env.KERNELSU_VARIANT == 'SukiSU-Ultra' }}
        run: |
          cd kernel_workspace/kernel_platform/out/msm-kernel-${{ env.CPUD }}-gki/dist
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          cp Image $GITHUB_WORKSPACE/AnyKernel3/Image
          cp Image $GITHUB_WORKSPACE/kernel_workspace/kernel

      - name: Reproduction of documents
        if: ${{ env.KERNELSU_VARIANT == 'SukiSU' }}
        run: |
          cd kernel_workspace/kernel_platform/out/msm-kernel-${{ env.CPUD }}-gki/dist
          cp Image $GITHUB_WORKSPACE/AnyKernel3/Image
          cp Image $GITHUB_WORKSPACE/kernel_workspace/kernel
         
      - name: Package artifact
        run: |
          cd $GITHUB_WORKSPACE/AnyKernel3
          zip -r ../AnyKernel3_KernelSU_${{ env.KSUVER }}_${{ env.FEIL }}.zip ./*
          cd ..
          cd $GITHUB_WORKSPACE/kernel_workspace
          zip -r ../Image_KernelSU_${{ env.KSUVER }}_${{ env.FEIL }}.zip ./kernel

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Kernel_ZIP_Artifacts
          path: |
            *.zip
          retention-days: 1

  release:
      needs: build
      runs-on: ubuntu-latest
      permissions:
        contents: write
        packages: write
        actions: read
      
      steps:
        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: Kernel_ZIP_Artifacts
            path: ./release_zips
         
        - name: Create release
          id: create_release
          uses: softprops/action-gh-release@v1
          with:
            tag_name: "build-${{ github.run_id }}"
            name: "OnePlusAce3_SukiSU Build ${{ github.run_number }}"
            body: |
              - 编译时间: ${{ github.event.repository.updated_at }}
              - 内核版本: ${{ needs.build.outputs.ksuuver }}${{ needs.build.outputs.ksuver }}
              - 推荐管理器：[SukiSU-Ultra](https://github.com/ShirkNeko/SukiSU-Ultra/releases)
              - 如果构建的内核版本没变，不必更新！
            draft: false
            prerelease: false
            files: |
              release_zips/AnyKernel3_KernelSU_*.zip
              release_zips/Image_KernelSU_*.zip

        - name: Delete older
          uses: dev-drprasad/delete-older-releases@v0.3.4
          continue-on-error: true
          timeout-minutes: 5
          with:
            keep_latest: ${{ env.RETENTION_COUNT }}
            delete_tags: true
            delete_tag_pattern: 'build-*'
          env:
            GITHUB_TOKEN: ${{ github.token }}
